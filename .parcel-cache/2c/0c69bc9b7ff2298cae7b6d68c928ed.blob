{"mappings":"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","sources":["./script.js"],"sourcesContent":["'use strict';\n\n// prettier-ignore\n\n\n\nclass Workout {\n    date = new Date();\n    id = (Date.now() + '').slice(-10);\n\n    constructor(coords, dist, duration) {\n        this.coords = coords;//[lat,lng]\n        this.dist = dist; //in km\n        this.duration = duration; //in mins\n    }\n\n    _setDesciption() {\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n        this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${months[this.date.getMonth()]} ${this.date.getDate()}`\n    }\n\n}\n\nclass Running extends Workout {\n    type = 'running';\n\n    constructor(coords, dist, duration, cadence) {\n        super(coords, dist, duration);\n        this.cadence = cadence;\n        this.calcPace();\n        this._setDesciption()\n    }\n\n    calcPace() {\n        //min/km\n        this.pace = this.duration / this.dist;\n        return this.pace;\n    }\n}\n\nclass Cycling extends Workout {\n    type = 'cycling';\n\n    constructor(coords, dist, duration, elevationGain) {\n        super(coords, dist, duration);\n        this.elevationGain = elevationGain;\n        this.calcSpeed();\n        this._setDesciption() //constructor method will give access to the type\n    }\n\n    calcSpeed() {\n        //km/hr\n        this.speed = this.dist / (this.duration * 60);\n        return this.speed;\n    }\n}\n\n\n// const run1 = new Running([39, -12], 5.2, 24, 178);\n// const cycle1 = new Cycling([39, -12], 27, 95, 523);\n\n// console.log(run1, cycle1);\n\n\n///////////////////\n//APPLICATION ARCHITECTURE\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\n\n\n\nclass App {\n\n    #map;\n    #mapZoomLevel = 13;\n    #mapEvent;\n    #workouts = [];\n\n    constructor() {\n        //these functions will get automatically called once an object is created\n\n        this._getPositions();\n\n\n        //get data from local storage\n        this._getLocalStorage();\n\n        form.addEventListener('submit', this._newWorkout.bind(this)); //this of callback function of event handler points to the element itself hence we need to bind this to current object\n\n        //selection between running/cycling\n        //whenever there is a change in value of select element it triggers an event\n        inputType.addEventListener('change', this._toggleElevationField);\n\n\n        //eventListener to workout(move marker)\n\n        containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n\n    }\n\n    _getPositions() {\n        //getting coordinates\n\n\n        //---using geolocation API---\n\n        //2 callback fn - 1 will be called on success and the 2nd is the error callback\n\n\n        if (navigator.geolocation) {\n            // console.log(this);\n            navigator.geolocation.getCurrentPosition(this._loadMap.bind(this), function () { //as getCurrentPosition treats the callback function as a normal function, we need to bind this to current object\n                alert('Could not derive Coordinates')\n            }\n            );\n        }\n    }\n\n    _loadMap(position) {\n\n        // console.log(position);//GeolocationPositionÂ {coords: GeolocationCoordinates, timestamp: 1703995717885}\n        const { latitude } = position.coords;\n        const { longitude } = position.coords;\n        // console.log(longitude, latitude);\n        // console.log(`https://www.google.com/maps/@${latitude},${longitude}`); //using in gMaps\n\n        const coords = [latitude, longitude];\n\n        //displaying map\n        // console.log(this);\n        //const map can be used to implement eventListeners\n        this.#map = L.map('map').setView(coords, this.#mapZoomLevel);//13 is zoom value\n        //'map' must be the ID name of the element in HTMl and it is in that element where the map will be displayed\n\n        // console.log(map);\n\n        L.tileLayer('https://tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(this.#map);\n\n\n\n        //displaying mark/form on map wherever it is clicked\n        //on() method on leaflet library(alternate of eventListener)\n        //handling clicks on map\n        this.#map.on('click', this._showForm.bind(this)) //it acts like an eventHandler, hence we need to bind this\n\n        //show markers initially, only when the map has been loaded\n        this.#workouts.forEach(work => {\n            this._renderWorkoutMarker(work);\n        })\n\n    }\n\n    _showForm(mapE) {\n        this.#mapEvent = mapE;\n        form.classList.remove('hidden');\n        inputDistance.focus();\n    }\n\n\n    _hideMapForm() {\n        inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value = \"\";\n        form.style.display = 'none';\n        form.classList.add('hidden');\n        setTimeout(() => form.style.display = 'grid', 1000);\n    }\n\n\n    _toggleElevationField() {\n        inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n        inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n    }\n\n    _newWorkout(e) {\n\n        const validInputs = (...inputs) => inputs.every(input => Number.isFinite(input)); //every method will only return true if true for all of them\n\n        const allPositive = (...inputs) => inputs.every(input => input > 0);\n\n        e.preventDefault();\n\n\n        //Get data from form\n        const type = inputType.value;\n        const distance = +inputDistance.value;\n        const duration = +inputDuration.value;\n        const { lat, lng } = this.#mapEvent.latlng;\n        let workout;\n\n\n        //if workout is running, create running object else create cycling object\n        if (type === 'running') {\n            const cadence = +inputCadence.value;\n            //check if data is valid\n            if (!validInputs(distance, duration, cadence) || !allPositive(distance, duration, cadence)) return alert('Inputs have to be positive numbers!');\n\n            //create running object\n            workout = new Running([lat, lng], distance, duration, cadence);\n\n\n        }\n\n        if (type === 'cycling') {\n            const elevation = +inputElevation.value;\n            // if (!Number.isFinite(distance) || !Number.isFinite(duration) || !Number.isFinite(cadence)) \n            if (!validInputs(distance, duration, elevation) || !allPositive(distance, duration)) return alert('Inputs have to be positive numbers!');\n\n            workout = new Cycling([lat, lng], distance, duration, elevation);\n        }\n\n        //Add new object to the workout array\n\n        this.#workouts.push(workout);\n        // console.log(workout);\n\n\n        //render workout on map as marker\n\n        //Display marker\n        // console.log(mapEvent);\n\n        this._renderWorkoutMarker(workout)\n\n        //render workout on the list\n        this._renderWorkout(workout);\n\n\n        //Hide form and clear input fields\n        this._hideMapForm();\n\n\n        //Set local storage to all workouts\n        this._setLocalStorage();\n\n    }\n\n    _renderWorkoutMarker(workout) {\n        L.marker(workout.coords).addTo(this.#map) //since we are manually calling the fn, no need to bind 'this'\n            .bindPopup(L.popup({\n                maxWidth: 250,\n                minWidth: 100,\n                autoClose: false,\n                closeOnClick: false,\n                className: `${workout.type}-popup`\n            }))\n            .setPopupContent(`${workout.type === 'running' ? 'ðââï¸' : 'ð´ââï¸'} ${workout.description}`)\n            .openPopup();\n    }\n\n    _renderWorkout(workout) {\n        let html = `<li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n          <h2 class=\"workout__title\">${workout.description}</h2>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">${workout.type === 'running' ? 'ðââï¸' : 'ð´ââï¸'}</span>\n            <span class=\"workout__value\">${workout.dist}</span>\n            <span class=\"workout__unit\">km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">â±</span>\n            <span class=\"workout__value\">${workout.duration}</span>\n            <span class=\"workout__unit\">min</span>\n          </div>`;\n\n        if (workout.type === 'running') {\n            html += `<div class=\"workout__details\">\n            <span class=\"workout__icon\">â¡ï¸</span>\n            <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n            <span class=\"workout__unit\">min/km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">ð¦¶ð¼</span>\n            <span class=\"workout__value\">${workout.cadence}</span>\n            <span class=\"workout__unit\">spm</span>\n          </div>`;\n        }\n\n        if (workout.type === 'cycling') {\n            html += `<div class=\"workout__details\">\n            <span class=\"workout__icon\">â¡ï¸</span>\n            <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n            <span class=\"workout__unit\">km/h</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">â°</span>\n            <span class=\"workout__value\">${workout.elevationGain}</span>\n            <span class=\"workout__unit\">m</span>\n          </div>`;\n        }\n\n        form.insertAdjacentHTML('afterend', html);\n\n    }\n\n\n    _moveToPopup(e) {\n        const workoutEl = e.target.closest('.workout');\n        // console.log(workoutEl);\n\n        if (!workoutEl) return;\n\n        const workout = this.#workouts.find(work => work.id === workoutEl.dataset.id);\n\n        // console.log(workout);\n\n        //move the market to coordinates attained from workout\n        //build in method in leaflet - setView(arg1 = coordinates, arg2 = zoom level, arg3 = object of options)\n\n        this.#map.setView(workout.coords, this.#mapZoomLevel, {\n            animate: true,\n            pan: {\n                duration: 1\n            }\n        })\n    }\n\n\n    _setLocalStorage() {\n\n        //using localStorage API(arg1 = key, arg2 = string)\n        //convert object to string - JSON.stringify()\n        localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n\n    }\n\n\n    _getLocalStorage() {\n\n        //IMP -> converting object to string will make us loost the prototype chain\n\n        const data = JSON.parse(localStorage.getItem('workouts')); //convert string to object\n        // console.log(data);\n\n        if (!data) return;\n\n        this.#workouts = data;\n\n        this.#workouts.forEach(work => {\n            this._renderWorkout(work);\n        })\n    }\n\n\n    reset() {\n        //delete localStorage\n\n        localStorage.removeItem('workouts');\n\n        //enables us to programmatically reload the page and empty the localStorage\n        location.reload();\n    }\n\n}\n\n\nconst app = new App();\n\n\n\n\n\n\n"],"names":["Workout","coords","dist","duration","$e16b98a558ec4c044403bade87d68b4$var$_classCallCheck","this","$e16b98a558ec4c044403bade87d68b4$var$_defineProperty","Date","now","slice","$e16b98a558ec4c044403bade87d68b4$var$_createClass","key","value","description","concat","type","toUpperCase","date","getMonth","getDate","Running","_Workout","cadence","_this","$e16b98a558ec4c044403bade87d68b4$var$_assertThisInitialized","$e16b98a558ec4c044403bade87d68b4$var$_callSuper","calcPace","_setDesciption","$e16b98a558ec4c044403bade87d68b4$var$_inherits","pace","Cycling","_Workout2","elevationGain","_this2","calcSpeed","speed","form","document","querySelector","containerWorkouts","inputType","inputDistance","inputDuration","inputCadence","inputElevation","$e16b98a558ec4c044403bade87d68b4$var$_map","WeakMap","$e16b98a558ec4c044403bade87d68b4$var$_mapZoomLevel","$e16b98a558ec4c044403bade87d68b4$var$_mapEvent","$e16b98a558ec4c044403bade87d68b4$var$_workouts","App","$e16b98a558ec4c044403bade87d68b4$var$_classPrivateFieldInitSpec","writable","_getPositions","_getLocalStorage","addEventListener","_newWorkout","bind","_toggleElevationField","_moveToPopup","navigator","geolocation","getCurrentPosition","_loadMap","alert","position","_this3","latitude","longitude","$e16b98a558ec4c044403bade87d68b4$var$_classPrivateFieldSet","L","map","setView","$e16b98a558ec4c044403bade87d68b4$var$_classPrivateFieldGet","tileLayer","attribution","addTo","on","_showForm","forEach","work","_renderWorkoutMarker","mapE","classList","remove","focus","style","display","add","setTimeout","closest","toggle","e","validInputs","_len","arguments","length","inputs","Array","_key","every","input","Number","isFinite","allPositive","_len2","_key2","preventDefault","workout","distance","_classPrivateFieldGet2","latlng","lat","lng","elevation","push","_renderWorkout","_hideMapForm","_setLocalStorage","marker","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","setPopupContent","openPopup","html","id","toFixed","insertAdjacentHTML","workoutEl","target","find","dataset","animate","pan","localStorage","setItem","JSON","stringify","_this4","data","parse","getItem","removeItem","location","reload"],"version":3,"file":"script.HASH_REF_55381ce1529f332ef7d7b2562e15696e.js.map"}